CIE-1
1)RADIO BUTTON
MAIN.XML
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/Heading"
        android:textSize="20sp"
        android:layout_above="@+id/RadioGrp"
        android:layout_centerInParent="true"
        android:padding="20dp"/>

    <RadioGroup
        android:id="@+id/RadioGrp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true">

        <RadioButton
            android:id="@+id/radioButton2"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="@string/r1" />

        <RadioButton
            android:id="@+id/radioButton3"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="@string/r2" />

        <RadioButton
            android:id="@+id/radioButton4"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="@string/r3" />

        <RadioButton
            android:id="@+id/radioButton5"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="@string/r4" />

        <RadioButton
            android:id="@+id/radioButton6"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="@string/r5" />

    </RadioGroup>

    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:text="@string/button"
        android:layout_marginTop="20dp"
        android:layout_below="@+id/RadioGrp"/>
</RelativeLayout>

KT FILE
package com.example.myapplication

import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.view.animation.AnimationUtils
import android.widget.*

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        title = "RadioGroup on Kotlin"

        val radioGroup=findViewById<RadioGroup>(R.id.RadioGrp)

        val button=findViewById<Button>(R.id.button)

        button.setOnClickListener {
            val selectedOption = radioGroup!!.checkedRadioButtonId

            val radioButton=findViewById<RadioButton>(selectedOption)

            Toast.makeText(this, radioButton.text.toString()+" is selected!", Toast.LENGTH_SHORT).show()
        }
    }
}

(VALUES->STRINGS.XML)
STRINGS.XML
<resources>
    <string name="app_name">RadioButton</string>
    <string name="Heading">Choose your Course:</string>
    <string name="r1">Computer Networks</string>
    <string name="r2">OOMD</string>
    <string name="r3">CCC</string>
    <string name="r4">SOA</string>
    <string name="r5">MAD</string>
    <string name="button">Submit</string>

</resources>
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2)CONSTRAINT LAYOUT
MAIN.XML
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <EditText
        android:id="@+id/editTextNumber"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="150dp"
        android:text="0"
        android:ems="10"
        android:inputType="number" />

    <EditText
        android:id="@+id/editTextNumber2"
        android:layout_width="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_below="@+id/editTextNumber"
        android:text="0"
        android:layout_height="wrap_content"
        android:ems="10"
        android:inputType="number" />

    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:backgroundTint="@color/purple_200"
        android:text="Button" />

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_above="@+id/button"
        android:layout_centerInParent="true"
        android:textSize="20sp"
        android:text="Result" />
</RelativeLayout>

MAIN.KT
package com.example.myapplication

import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.view.animation.AnimationUtils
import android.widget.*

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val num1=findViewById<EditText>(R.id.editTextNumber)
        val num2=findViewById<EditText>(R.id.editTextNumber2)
        val button=findViewById<Button>(R.id.button)
        val result=findViewById<TextView>(R.id.textView)

        button.setOnClickListener{
            if(num1.text.isEmpty() || num2.text.isEmpty()){
                Toast.makeText(this, "Enter the Number Please!", Toast.LENGTH_SHORT).show()
            }
            result.text =  "Result:"+(num1.text.toString().toInt() + num2.text.toString().toInt()).toString()
        }
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3)CHECKBOX
MAIN.XML
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="30sp"
        android:textStyle="bold"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="50dp"
        android:text="Welcome To Prabby's Cafe :)" />

    <TextView
        android:id="@+id/textView2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView"
        android:textSize="20sp"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="40dp"
        android:text="Choose your Items:" />

    <CheckBox
        android:id="@+id/checkBox"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:text="Burger" />

    <CheckBox
        android:id="@+id/checkBox2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:layout_below="@+id/checkBox"
        android:text="Coffee" />

    <CheckBox
        android:id="@+id/checkBox3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:layout_below="@id/checkBox2"
        android:text="Croissant" />

    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:layout_below="@id/checkBox3"
        android:layout_marginTop="20dp"
        android:text="Place Order!" />
</RelativeLayout>

MAIN.KT
class MainActivity : AppCompatActivity() {
    lateinit var burger: CheckBox
    lateinit var coffee: CheckBox
    lateinit var croissant: CheckBox
    lateinit var button: Button
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        burger = findViewById(R.id.checkBox)
        coffee = findViewById(R.id.checkBox2)
        croissant = findViewById(R.id.checkBox3)
        button = findViewById(R.id.button)

        button.setOnClickListener {
            var totalAmount =0
            val result = StringBuilder()
            result.append("Your order is: ")

            if(burger.isChecked){
                result.append("Burger 100Rs ")
                totalAmount+=100
            }
            if(coffee.isChecked){
                result.append("Coffee 50Rs ")
                totalAmount+=50
            }
            if(croissant.isChecked){
                result.append("Croissant 30Rs ")
                totalAmount+=30
            }

            result.append("Total Bill: "+ totalAmount + "Rs")
            Toast.makeText(this, result.toString(), Toast.LENGTH_SHORT).show()
        }
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4)IMAGE VIEW
ACTIVITY.XML
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".MainActivity">

    <LinearLayout
        android:layout_width="655dp"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <ImageView
            android:id="@+id/imageView"
            android:layout_width="200dp"
            android:layout_height="200dp"
            android:layout_weight="1"
            android:contentDescription="@string/donut"

            android:onClick="donut"
            android:paddingBottom="10dp"
            android:src="@drawable/ic_launcher_background" />

        <TextView
            android:id="@+id/donuttext"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:paddingLeft="20dp"
            android:paddingTop="70dp"
            android:text="@string/donut"
            android:textSize="18dp" />
    </LinearLayout>
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="287dp"
        android:orientation="horizontal">

        <ImageView
            android:id="@+id/imageView2"
            android:layout_width="200dp"
            android:layout_height="200dp"
            android:layout_weight="1"
            android:onClick="choco"
            android:paddingBottom="10dp"
            app:srcCompat="@drawable/ic_baseline_star_24"
            tools:ignore="SpeakableTextPresentCheck" />

        <TextView
            android:id="@+id/textView3"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:paddingTop="70dp"
            android:text="@string/choco"
            android:textSize="18dp" />
    </LinearLayout>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <ImageView
            android:id="@+id/imageView4"
            android:layout_width="200dp"
            android:layout_height="200dp"
            android:layout_weight="1"
            android:onClick="ice"
            android:paddingBottom="10dp"
            android:src="@drawable/ic_launcher_foreground" />

        <TextView
            android:id="@+id/icetext"

            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:paddingLeft="20dp"
            android:paddingTop="70dp"
            android:text="@string/iced"
            android:textSize="18dp" />
    </LinearLayout>
</LinearLayout>

STRINGS.XML
<resources>
    <string name="app_name">RadioButton</string>
    <string name="donut">donut is selected</string>
    <string name="choco">chocooooo</string>
    <string name="iced">iceeee</string>
</resources>

KT FILE
package com.example.myapplication

import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.view.animation.AnimationUtils
import android.widget.*

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
    }
    fun donut(view: View) {
        Toast.makeText(this, "Donut clicked!", Toast.LENGTH_SHORT).show()
    }
    fun choco(view: View) {
        Toast.makeText(this, "Chocolate clicked!",
            Toast.LENGTH_SHORT).show()
    }
    fun ice(view: View) {
        Toast.makeText(this, "IceCream clicked!",
            Toast.LENGTH_SHORT).show()
    }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5)DATE PICKER
MAIN.XML
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp">

    <Button
        android:id="@+id/btnShowDatePicker"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Select Date"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="16dp" />

    <TextView
        android:id="@+id/tvSelectedDate"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Selected Date: "
        android:layout_below="@id/btnShowDatePicker"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="16dp"
        android:textSize="16sp" />

</RelativeLayout>

KT FILE
package com.example.myapplication

import android.app.DatePickerDialog
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.view.animation.AnimationUtils
import android.widget.*
import java.util.*

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val btnShowDatePicker = findViewById<Button>(R.id.btnShowDatePicker)
        val tvSelectedDate = findViewById<TextView>(R.id.tvSelectedDate)

        btnShowDatePicker.setOnClickListener {
            // Get the current date
            val calendar = Calendar.getInstance()
            val year = calendar.get(Calendar.YEAR)
            val month = calendar.get(Calendar.MONTH)
            val day = calendar.get(Calendar.DAY_OF_MONTH)

            // Show DatePickerDialog
            DatePickerDialog(this, { _, selectedYear, selectedMonth, selectedDay ->
                // Display selected date in TextView
                val selectedDate = selectedDay.toString()+"/"+selectedMonth+"/"+selectedYear
                tvSelectedDate.text = "Selected Date: $selectedDate"
            }, year, month, day).show()
        }
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6)TIME PICKER
MAIN.XML
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp">

    <TimePicker
        android:id="@+id/timePicker"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:timePickerMode="clock" />  

    <TextView
        android:id="@+id/tvSelectedTime"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_above="@id/timePicker"
        android:layout_centerHorizontal="true"
        android:text="Selected Time: "
        android:textSize="16sp"
        android:layout_marginBottom="16dp" />

</RelativeLayout>

KT FILE
package com.example.myapplication

import android.app.DatePickerDialog
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.view.animation.AnimationUtils
import android.widget.*
import java.util.*

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val timePicker = findViewById<TimePicker>(R.id.timePicker)
        val tvSelectedTime = findViewById<TextView>(R.id.tvSelectedTime)

        // Set listener for time changes
        timePicker.setOnTimeChangedListener { _, hourOfDay, minute ->
            val formattedTime = String.format("%02d:%02d", hourOfDay, minute)
            tvSelectedTime.text = "Selected Time: $formattedTime"
        }
    }
}

IF ASKED TIME PICKER WITH SPINNER MODE
MAIN.XML
I

<?xml version="1.0" encoding="utf-8"?>

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"

android:layout_width="match_parent"

android:layout_height="match_parent">

<TimePicker

android:id="@+id/timePicker"

android:layout_width="wrap_content"

android:layout_height="wrap_content"

android:layout_centerHorizontal="true"

android:timePickerMode="spinner"/>

<RelativeLayout>

KT FILE
package com.example.timepicker1

import android.support.v7.app.AppCompatActivity

import android.os.Bundle

import android.widget.TimePicker

import android.widget.Toast

class MainActivity AppCompatActivity() {

override fun onCreate(savedInstanceState: Bundle?) {

super.onCreate(savedInstanceState)

setContentView(R.layout.activity_main)

val timePicker= findViewById<TimePicker>(R.id.timePicker)

timePicker.setOnTimeChangedListener {_, hour, minute ->

var am_pm=""

val hour= if (hour < 10) "0" + hour else hour

val min = if (minute < 10) "0" + minute else minute

val msg = "Time is: $hour :$min $am_pm"

Toast.makeText(context: this@MainActivity, msg, Toast.LENGTH_SHORT).show()


}

}

}
-------------------------------------------------------------------------------------------------------------------------------------------------------------
7) PROGRESS BAR
MAIN.XML
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">
    <!-- adding progress bar -->
    <ProgressBar
        android:id="@+id/progress_Bar"
        style="?android:attr/progressBarStyle"
        android:layout_width="200dp"
        android:layout_height="wrap_content"
        android:layout_marginLeft="70dp"
        android:layout_marginTop="150dp"
        android:indeterminate = "true"
        android:max="100"
        android:minWidth="200dp"
        android:minHeight="50dp"
        android:visibility="invisible"
        android:layout_centerInParent="true"
        android:progress="0"
        android:layout_marginStart="70dp" />

    <!-- adding textview which will show the progress -->
    <TextView
        android:id="@+id/text_view"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/progress_Bar"
        android:layout_centerHorizontal="true" />
    <!-- adding button to start the progress -->
    <Button
        android:id="@+id/show_button"
        android:layout_width="191dp"
        android:layout_height="wrap_content"
        android:layout_below="@+id/text_view"
        android:layout_marginLeft="70dp"
        android:layout_marginTop="20dp"
        android:text="Progress Bar"
        android:layout_centerHorizontal="true"
        android:layout_marginStart="70dp" />
</RelativeLayout>

KT FILE
package com.example.myapplication

import android.app.DatePickerDialog
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.os.Handler
import android.view.View
import android.view.animation.AnimationUtils
import android.widget.*
import java.util.*

class MainActivity : AppCompatActivity() {
    private var progressBar: ProgressBar? = null
    private var i = 0
    private var txtView: TextView? = null
    private val handler = Handler()
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        progressBar = findViewById<ProgressBar>(R.id.progress_Bar) as ProgressBar
// finding textview by its id
        txtView = findViewById<TextView>(R.id.text_view)
// finding button by its id
        val btn = findViewById<Button>(R.id.show_button)

// handling click on button
        btn.setOnClickListener {
// Before clicking the button the progress bar will invisible
// so we have to change the visibility of the progress bar to visible
// setting the progressbar visibility to visible
            progressBar!!.visibility = View.VISIBLE
            i = progressBar!!.progress
            Thread(Runnable {
// this loop will run until the value of i becomes 99
                while (i < 100) {
                    i += 1
// Update the progress bar and display the current value
                    handler.post(Runnable {
                        progressBar!!.progress = i
// setting current progress to the textview
                        txtView!!.text = i.toString() + "/" + progressBar!!.max
                    })
                    try {
                        Thread.sleep(100)
                    } catch (e: InterruptedException) {
                        e.printStackTrace()
                    }
                }
// setting the visibility of the progressbar to invisible
// or you can use View.GONE instead of invisible
// View.GONE will remove the progressbar
                progressBar!!.visibility = View.INVISIBLE
            }).start()
        }
    }
}
FOR INDETERMINATE
<ProgressBar

android:id="@+id/pBar"

style="?android:attr/progressBarStyleHorizontal or progressBarStyle "

android:layout_width="wrap_content"

android:layout_height="wrap_content"

android:indeterminate="true"/>
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
8)ALERT DIALOG
MAIN.XML
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">


    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:text="Exit?" />

    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:layout_below="@+id/textView"
        android:onClick="exit"
        android:text="Press to exit." />
</RelativeLayout>

KT FILE
package com.example.myapplication

import android.app.DatePickerDialog
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.os.Handler
import android.support.v7.app.AlertDialog
import android.view.View
import android.view.animation.AnimationUtils
import android.widget.*
import java.util.*

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
    }
    fun exit(view : View){
        val alert = AlertDialog.Builder(this)
        alert.setTitle("Confirm Exit?")
        alert.setIcon(R.drawable.ic_baseline_star_24)
        alert.setMessage("Are you sure?")
        alert.setCancelable(false)
        alert.setPositiveButton("Yes"){_,_->
            finish()
        }
        alert.setNegativeButton("No"){_,_->
            Toast.makeText(this,"You clicked on NO", Toast.LENGTH_SHORT).show()
        }
        alert.setNeutralButton("Cancel"){_,_->
            Toast.makeText(this,"You clicked on CANCEL", Toast.LENGTH_SHORT).show()
        }
        alert.create().show()
    }
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9)TOGGLE BUTTON
MAIN.XML
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <ImageView
        android:id="@+id/imageView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="30dp"
        app:srcCompat="@drawable/ic_launcher_background" />

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_below="@+id/imageView"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="30dp"
        android:layout_height="wrap_content"
        android:text="The Image is Visible" />

    <ToggleButton
        android:id="@+id/toggleButton"
        android:layout_below="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_height="wrap_content"
        android:textOn="Show"
        android:textOff="Hide"
        android:text="ToggleButton" />
</RelativeLayout>

KT FILE
package com.example.myapplication

import android.app.DatePickerDialog
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.os.Handler
import android.support.v7.app.AlertDialog
import android.view.View
import android.view.animation.AnimationUtils
import android.widget.*
import java.util.*

class MainActivity : AppCompatActivity() {
    lateinit var image: ImageView
    lateinit var textView: TextView
    lateinit var toggleButton: ToggleButton

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        image= findViewById(R.id.imageView)
        textView= findViewById(R.id.textView)
        toggleButton= findViewById(R.id.toggleButton)

        toggleButton.setOnCheckedChangeListener { _, isChecked ->
            if(isChecked){
                image.visibility = View.INVISIBLE
                textView.text= "The image is now Invisible."
            }
            else{
                image.visibility= View.VISIBLE
                textView.text="The image is Visible."
            }
        }
    }
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10)CUSTOM TOAST
ACTIVITY.XML
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <Button
        android:id="@+id/button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_marginBottom="40dp"
        android:text="Press Me For a Star" />
</RelativeLayout>

LAYOUT->NEW->RESOURCE FILE
CUSTOMTOAST
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:id="@+id/customcontainer">


    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="20dp"
        android:layout_toRightOf="@+id/imageView"
        android:text="Hello I am A Star" />

    <ImageView
        android:id="@+id/imageView"
        android:layout_width="60dp"
        android:layout_height="60dp"
        app:srcCompat="@android:drawable/btn_star_big_on" />
</RelativeLayout>

KT FILE
package com.example.myapplication

import android.app.DatePickerDialog
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.os.Handler
import android.support.v7.app.AlertDialog
import android.view.Gravity
import android.view.View
import android.view.animation.AnimationUtils
import android.widget.*
import java.util.*

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val btn = findViewById<Button>(R.id.button)

        btn.setOnClickListener {
            val ctoast= layoutInflater.inflate(R.layout.customtoast, findViewById(R.id.customcontainer))
            val customToast = Toast(this)
            customToast.view = ctoast
            customToast.setGravity(Gravity.CENTER,0,0)
            customToast.duration=Toast.LENGTH_LONG
            customToast.show()
        }
    }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11)CUSTOM CHECKBOX
MAIN.XML
<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">
    <CheckBox
        android:id="@+id/checkBox3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:button="@drawable/ic_launcher_foreground"
        android:checked="true"
        android:text="CheckBox3"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.565"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <CheckBox
        android:id="@+id/checkBox4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="104dp"
        android:button="@drawable/ic_baseline_star_24"
        android:checked="false"
        android:text="CheckBox4"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/checkBox3" />
    <Button
        android:id="@+id/button1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Button"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.498"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/checkBox4"
        app:layout_constraintVertical_bias="0.406" />
</android.support.constraint.ConstraintLayout>

KT FILE
package com.example.myapplication

import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.view.animation.AnimationUtils
import android.widget.Button
import android.widget.CheckBox
import android.widget.TextView
import android.widget.Toast

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        var btn=findViewById<Button>(R.id.button1)
        btn.setOnClickListener {
            var ckb3 = findViewById<CheckBox>(R.id.checkBox3)
            var ckb4 = findViewById<CheckBox>(R.id.checkBox4)
            val sb = StringBuilder("") // create an empty string
            if (ckb3.isChecked)
                sb.append(" " + ckb3.text) //append the string with text message of checkbox given in layout file
            if (ckb4.isChecked)
                sb.append(" " + ckb4.text)
            Toast.makeText(this, sb, Toast.LENGTH_LONG).show()
        }
    }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12)SPINNER
SPINNER WITH TOAST
MAIN.XML
<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <Spinner
        android:id="@+id/spinner"
        android:layout_width="257dp"
        android:layout_height="107dp"
        android:layout_marginTop="204dp"
        android:layout_marginEnd="76dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        tools:ignore="SpeakableTextPresentCheck" />
</android.support.constraint.ConstraintLayout>

KT FILE
package com.example.myapplication

import android.app.DatePickerDialog
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.os.Handler
import android.support.v7.app.AlertDialog
import android.view.Gravity
import android.view.View
import android.view.animation.AnimationUtils
import android.widget.*
import java.util.*

class MainActivity : AppCompatActivity() {
    private lateinit var spinner: Spinner //create a variable
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        spinner=findViewById(R.id.spinner) //initialize the spinner
        val listItems=listOf("Chocolate","Strawberry","Vanilla","Mango")
//create an Adapter
        val arrayadapter = ArrayAdapter(this, android.R.layout.simple_spinner_item, listItems)
// 3 parameter, first=context thats the current activty i.e. main activity, layout - simple spinner default layout provided by IDE,
// if its a custom then we need to create custom layout, last one is the listitem
        arrayadapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)
        spinner.adapter=arrayadapter
        spinner.onItemSelectedListener=object:AdapterView.OnItemSelectedListener{
            override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int, id: Long) {
                val selectedItem= parent?.getItemAtPosition(position).toString()
                Toast.makeText(this@MainActivity,"You have selected $selectedItem flavour", Toast.LENGTH_SHORT).show()
            }
            //onItemSelectedListener is an interface that define 2 callback methods to be invoked - when item is selected or when no item is selected
            override fun onNothingSelected(p0: AdapterView<*>?) {
//this method is called when no item is selected but we don't do anything here
            }
        }
    }
}