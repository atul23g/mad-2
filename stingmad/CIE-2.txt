CIE-2

1)Explicit and Implicit Intents

if asked EXPLICIT two xml files in java(bottom->new->activity->empty activity)
if asked IMPLICIT one mai.xml

MAINACT.KT

package com.example.prabbyimplicitexplicit

import android.content.Intent
import android.net.Uri
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val impbtn = findViewById<Button>(R.id.impbutton)
        val expbtn = findViewById<Button>(R.id.expbutton)

        expbtn.setOnClickListener {
            val explicitintent = Intent(this, SecondActivity::class.java)
            startActivity(explicitintent)
//            finish()
        }
        impbtn.setOnClickListener {
            val implicitintent = Intent(Intent.ACTION_VIEW, Uri.parse("https://www.youtube.com"))
            startActivity(implicitintent)
        }

    }
}

SECOND.KT

package com.example.prabbyimplicitexplicit

import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.widget.Toast

class SecondActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_second)

        Toast.makeText(this, "Hi this is Second activity in this application", Toast.LENGTH_LONG).show()
    }
}

SECOND.XML

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">


    <TextView
        android:id="@+id/textView2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:textSize="30sp"
         />
</RelativeLayout>

MAIN.XML

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="100dp"
        android:textSize="30sp"
        android:text="Explicit and Implicit Demo" />

    <Button
        android:id="@+id/expbutton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:text="Explicit" />

    <Button
        android:id="@+id/impbutton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:layout_below="@+id/expbutton"
        android:text="Implicit" />
</RelativeLayout>
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2)MENU

TEENO TOGETHER

MAIN.XML
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:tools="http://schemas.android.com/tools"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/context"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:text="Context Menu" />

    <Button
        android:id="@+id/popup"
        android:layout_width="wrap_content"
        android:layout_below="@+id/context"
        android:layout_centerInParent="true"
        android:layout_height="wrap_content"
        android:text="PopUp Menu" />
</RelativeLayout>

MENU FOLDER CREATE(RES ->NEW->AND RES DIRECTORY)
(Right-click the menu folder → New → Menu Resource File → Name it)
CONTEXT.XML
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:android="http://schemas.android.com/apk/res/android">

    <item
        android:id="@+id/editItem"
        android:title="Edit" />
    <item
        android:id="@+id/deleteItem"
        android:title="Delete" />
</menu>

OPTION.XML
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:android="http://schemas.android.com/apk/res/android">


    <item android:title="Option Menu">
        <menu>
            <item
                android:id="@+id/item1"
                android:title="About" />
            <item
                android:id="@+id/item2"
                android:title="Search" />
            <item
                android:id="@+id/item3"
                android:title="Help" />
        </menu>
    </item>

</menu>

POPUP.XML
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:android="http://schemas.android.com/apk/res/android">

    <item
        android:id="@+id/search_item"
        android:title="Search" />
    <item
        android:id="@+id/modify_item"
        android:title="Modify" />
</menu>

MAINACT.KT

package com.example.myapplication

import android.graphics.Bitmap
import android.graphics.Canvas
import android.graphics.Color
import android.graphics.Paint
import android.graphics.drawable.BitmapDrawable
import android.graphics.drawable.ShapeDrawable
import android.graphics.drawable.shapes.OvalShape
import android.graphics.drawable.shapes.RectShape
import android.os.Bundle
import android.view.ContextMenu
import android.view.Menu
import android.view.MenuItem
import android.view.View
import android.widget.Button
import android.widget.ImageView
import android.widget.PopupMenu
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.fragment.app.Fragment
import androidx.fragment.app.FragmentManager
import com.example.myapplication.databinding.ActivityMainBinding

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        val cntxt = findViewById<Button>(R.id.context)
        registerForContextMenu(cntxt)

        val popbtn = findViewById<Button>(R.id.popup)
        popbtn.setOnClickListener {
            val popupMenu = PopupMenu(this, popbtn)
            popupMenu.menuInflater.inflate(R.menu.popup, popupMenu.menu)

            popupMenu.setOnMenuItemClickListener { item: MenuItem ->
                when (item.itemId) {
                    R.id.search_item -> {
                        Toast.makeText(this, "Search selected", Toast.LENGTH_SHORT).show()
                        true
                    }
                    R.id.modify_item -> {
                        Toast.makeText(this, "Modify selected", Toast.LENGTH_SHORT).show()
                        true
                    }
                    else -> false
                }
            }
            popupMenu.show()
        }
    }

    override fun onCreateOptionsMenu(menu: Menu?): Boolean {
        menuInflater.inflate(R.menu.option, menu)
        return super.onCreateOptionsMenu(menu)
    }

    override fun onOptionsItemSelected(item: MenuItem): Boolean {
        when(item.itemId){
            R.id.item1 -> Toast.makeText(this, "About Selected", Toast.LENGTH_LONG).show()
            R.id.item2 -> Toast.makeText(this, "Search Selected", Toast.LENGTH_LONG).show()
            R.id.item3 -> Toast.makeText(this, "Help Selected", Toast.LENGTH_LONG).show()
        }
        return super.onOptionsItemSelected(item)
    }

    override fun onCreateContextMenu(
        menu: ContextMenu?,
        v: View?,
        menuInfo: ContextMenu.ContextMenuInfo?
    ) {
        super.onCreateContextMenu(menu, v, menuInfo)
        menuInflater.inflate(R.menu.context, menu)
    }

    override fun onContextItemSelected(item: MenuItem): Boolean {
        when(item.itemId){
            R.id.editItem -> Toast.makeText(this, "Edit Selected", Toast.LENGTH_LONG).show()
            R.id.deleteItem -> Toast.makeText(this, "Delete Selected", Toast.LENGTH_LONG).show()
        }
        return super.onContextItemSelected(item)
    }

}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3)CANVAS

MAIN.XML
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">
    <ImageView
        android:id="@+id/imageV"
        android:layout_width="315dp"
        android:layout_height="526dp"
        android:layout_marginTop="100dp"
        android:layout_marginEnd="50dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>

KT FILE
package com.example.myapplication

import android.graphics.Bitmap
import android.graphics.Canvas
import android.graphics.Color
import android.graphics.Paint
import android.graphics.drawable.BitmapDrawable
import android.graphics.drawable.ShapeDrawable
import android.graphics.drawable.shapes.OvalShape
import android.graphics.drawable.shapes.RectShape
import android.os.Bundle
import android.widget.ImageView
import androidx.appcompat.app.AppCompatActivity
import androidx.fragment.app.Fragment
import androidx.fragment.app.FragmentManager
import com.example.myapplication.databinding.ActivityMainBinding

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        val bitmap: Bitmap = Bitmap.createBitmap(700, 1000,
            Bitmap.Config.ARGB_8888)
        val canvas: Canvas = Canvas(bitmap)
        var shapeDrawable: ShapeDrawable
// rectangle positions
        var left = 100
        var top = 100
        var right = 600
        var bottom = 400

// draw rectangle shape to canvas
        shapeDrawable = ShapeDrawable(RectShape())
        shapeDrawable.setBounds( left, top, right, bottom)
        shapeDrawable.getPaint().setColor(Color.parseColor("#009944"))
        shapeDrawable.draw(canvas)
// draw oval shape to canvas
        shapeDrawable = ShapeDrawable(OvalShape())
        shapeDrawable.setBounds( 100, 500, 600, 800)
        shapeDrawable.getPaint().setColor(Color.parseColor("#009191"))
        shapeDrawable.draw(canvas)
        val iv = findViewById<ImageView>(R.id.imageV)
        val pCircle = Paint()
        pCircle.setColor(Color.BLACK)
        canvas.drawCircle(30f, 30f, 30f, pCircle)
        val pBackground = Paint()
        pBackground.color = Color.RED
        canvas.drawRect(450f, 450f, 500f, 500f, pBackground)
// now bitmap holds the updated pixels
// set bitmap as background to ImageView
        iv.background = BitmapDrawable(getResources(), bitmap)
    }
}

--------------------------------------------------------------------------------------------------------------------------------------------------------------
4)FRAGMENTS

CREATE AS MANY FRAGMENTS AS MANY ASKED(SUPPOSE 2->(JAVA->BOTTOM file->FRAGMENT->FRAGMENT(BLANK)) 
AND GRADLE(MODULE)-> ADD viewBinding

{enable = true}

MAIN.XML
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <androidx.fragment.app.FragmentContainerView
        android:id="@+id/fragmentContainer"
        android:layout_width="412dp"
        android:layout_height="576dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        tools:ignore="MissingClass" />
    <Button
        android:id="@+id/bf1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="64dp"
        android:layout_marginBottom="88dp"
        android:text="Fragment1"
        android:backgroundTint="@color/purple_500"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toStartOf="@+id/bf2" />
    <Button
        android:id="@+id/bf2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="44dp"
        android:layout_marginBottom="88dp"
        android:text="Fragment2"
        android:backgroundTint="@color/purple_200"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>

FRAGMENT1.XML
<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".Fragment1"
    tools:ignore="MissingDefaultResource">

    <!-- TODO: Update blank fragment layout -->
    <TextView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:text="@string/hello_blank_fragment"
        android:gravity="center"
        android:background="@color/purple_500"
        />


</FrameLayout>

FRAGMENT2.XML
<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".Fragment2"
    tools:ignore="MissingDefaultResource">

    <!-- TODO: Update blank fragment layout -->
    <TextView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:text="@string/hello_blank_fragment"
        android:gravity="center"
        android:background="@color/teal_200"/>

</FrameLayout>

FRAGME1.KT
package com.example.myapplication

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.fragment.app.Fragment

// TODO: Rename parameter arguments, choose names that match
// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
private const val ARG_PARAM1 = "param1"
private const val ARG_PARAM2 = "param2"

/**
 * A simple [Fragment] subclass.
 * Use the [Fragment1.newInstance] factory method to
 * create an instance of this fragment.
 */
class Fragment1 : Fragment() {

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment1, container, false)
    }
}

FRAGMENT2.KT
package com.example.myapplication

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.fragment.app.Fragment


private const val ARG_PARAM1 = "param1"
private const val ARG_PARAM2 = "param2"


class Fragment2 : Fragment() {

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment2, container, false)
    }
}
MAIN.KT
package com.example.myapplication

import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import androidx.fragment.app.Fragment
import androidx.fragment.app.FragmentManager
import com.example.myapplication.databinding.ActivityMainBinding

class MainActivity : AppCompatActivity() {
    private lateinit var fragmentManager : FragmentManager
    private lateinit var binding : ActivityMainBinding
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        binding = ActivityMainBinding.inflate(layoutInflater)
        setContentView(binding.root)
        binding.button1.setOnClickListener {
            goToFragment(Fragment1())
        }
        binding.button2.setOnClickListener {
            goToFragment(Fragment2())
        }
    }
    private fun goToFragment(fragment: Fragment){
        fragmentManager = supportFragmentManager
        fragmentManager.beginTransaction().replace(R.id.fragment_container, fragment).commit()
    }
}

----------------------------------------------------------------------------------------------------------------------------------------------------
5)DATABASE
VIEW->APP INSPECTION

MAIN.XML
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity">
<EditText
android:id="@+id/fname"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_alignParentStart="true"
android:layout_alignParentLeft="true"
android:layout_alignParentTop="true"
android:ems="10"
android:inputType="textPersonName"
android:hint="First Name" />
<EditText
android:id="@+id/lname"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_alignParentStart="true"
android:layout_alignParentLeft="true"
android:layout_below="@+id/fname"
android:ems="10"
android:inputType="textPersonName"
android:hint="Last Name" />

<Button
android:id="@+id/btnadd"
android:layout_width="236dp"
android:layout_height="wrap_content"
android:layout_alignParentTop="true"
android:layout_centerHorizontal="true"
android:layout_marginTop="103dp"
android:text="Add Student"
android:onClick="btn_click" />
<Button
android:id="@+id/btndel"
android:layout_width="236dp"
android:layout_height="wrap_content"
android:layout_alignParentTop="true"
android:layout_centerHorizontal="true"
android:layout_marginTop="159dp"
android:text="Delete Student"
android:onClick="btn_click" />
<Button
android:id="@+id/btnupd"
android:layout_width="236dp"
android:layout_height="wrap_content"
android:layout_alignParentTop="true"
android:layout_centerHorizontal="true"
android:layout_marginTop="216dp"
android:text="Update Student"
android:onClick="btn_click" />

<Button
android:id="@+id/btnlis"
android:layout_width="236dp"
android:layout_height="wrap_content"
android:layout_below="@+id/btnupd"
android:layout_centerHorizontal="true"
android:onClick="btn_click"
android:text="List Students" />
<TextView
android:id="@+id/textView"
android:layout_width="302dp"
android:layout_height="180dp"
android:layout_below="@+id/btnlis"
android:layout_centerHorizontal="true" />
</RelativeLayout>

THEN DBCONTROLLER(JAVA->NEW->PACKAGE->MAIN->dbController then dbController folder->NEW->ACTIVITY->EMPTY ACTIVITY(NAME(dbController) SAME 
AND UNCHECK THE BOX GEN THE LAYOUT FILE)

dbController.kt

package dbController

import android.content.ContentValues
import android.content.Context
import android.database.sqlite.SQLiteDatabase
import android.database.sqlite.SQLiteOpenHelper
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.widget.TextView

class dbController(context:Context,name:String,factory:SQLiteDatabase.CursorFactory? ,version:Int) :SQLiteOpenHelper(context,"std.db",factory,version) {

    override fun onCreate(db : SQLiteDatabase) {
        db.execSQL("CREATE TABLE STUDENT(FNAME TEXT,LNAME TEXT);")
    }

    override fun onUpgrade(db: SQLiteDatabase, p1: Int, p2: Int) {
        db.execSQL("DROP TABLE IF EXISTS STUDENT")
        onCreate(db)
    }

    fun insert(a:String ,b:String){
        val cv=ContentValues()
        cv.put("FNAME",a)
        cv.put("LNAME",b)
        this.writableDatabase.insert("STUDENT",null,cv)
    }

    fun delete(a:String){
        this.writableDatabase.delete("STUDENT","FNAME='$a'",null)
    }
    fun update(a:String ,aa:String){
        this.writableDatabase.execSQL("UPDATE STUDENT SET FNAME='$aa' WHERE FNAME='$a';")
    }
    fun list(tv:TextView){
        if(tv!=null){
            tv.text=""
        }
        val c =this.readableDatabase.rawQuery("SELECT * FROM STUDENT",null)
        while(c.moveToNext()){
            tv?.append(
                """${c.getString(0)}${c.getString(1)}"""
            

            )
        }
    }
}

MAIN.KT
package com.example.myapplication

import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import androidx.fragment.app.Fragment
import androidx.fragment.app.FragmentManager
import com.example.myapplication.databinding.ActivityMainBinding

class MainActivity : AppCompatActivity() {
    private lateinit var fragmentManager : FragmentManager
    private lateinit var binding : ActivityMainBinding
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        binding = ActivityMainBinding.inflate(layoutInflater)
        setContentView(binding.root)
        binding.bf1.setOnClickListener {
            goToFragment(Fragment1())
        }
        binding.bf2.setOnClickListener {
            goToFragment(Fragment2())
        }
    }
    private fun goToFragment(fragment: Fragment){
        fragmentManager = supportFragmentManager
        fragmentManager.beginTransaction().replace(R.id.fragmentContainer, fragment).commit()
    }
}

---------------------------------------------------------------------------------------------------------------------------------------------------
6) SHARED PREF
MAIN.XML

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <EditText
        android:id="@+id/name"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:ems="10"
        android:inputType="textPersonName"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="100dp"
        android:hint="Name" />

    <EditText
        android:id="@+id/password"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:ems="10"
        android:layout_centerHorizontal="true"
        android:layout_below="@+id/name"
        android:inputType="numberPassword"
        android:hint="password"/>

    <Button
        android:id="@+id/savebtn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:text="Save" />

    <Button
        android:id="@+id/loadbtn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/savebtn"
        android:layout_centerInParent="true"
        android:text="Load" />

    <Button
        android:id="@+id/deletebtn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/loadbtn"
        android:layout_centerInParent="true"
        android:text="Delete" />
</RelativeLayout>

MAIN.KT
package com.example.prabbysharedpreferences

import android.content.SharedPreferences
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.Toast

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val name = findViewById<EditText>(R.id.name)
        val password = findViewById<EditText>(R.id.password)
        val savebtn = findViewById<Button>(R.id.savebtn)
        val deletebtn = findViewById<Button>(R.id.deletebtn)
        val loadbtn = findViewById<Button>(R.id.loadbtn)

        val shrdPref = getSharedPreferences("addName", MODE_PRIVATE)
        var edit = shrdPref.edit()
        savebtn.setOnClickListener {
            edit.putString("Name",name.text.toString())
            edit.putString("Password",password.text.toString())
            edit.commit()
            Toast.makeText(this, "Saved!", Toast.LENGTH_LONG).show()
        }
        loadbtn.setOnClickListener {
            val getname = shrdPref.getString("Name","Default Name")
            val getpassword = shrdPref.getString("Password","Default Password")
            name.setText(getname)
            password.setText(getpassword)
        }
        deletebtn.setOnClickListener {
            edit.clear()
            edit.commit()
        }
    }
}

ANOTHER ONE(PAUSE AND RESUME)
XML
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"  xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    tools:ignore="HardcodedText">
    <TextView
        android:id="@+id/textview"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="32dp"
        android:text="Shared Preferences"
        android:textColor="@android:color/black"
        android:textSize="24sp" />
    <!--EditText to take the data from the user and save the data in SharedPreferences-->  <EditText
    android:id="@+id/edit1"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_below="@+id/textview"
    android:layout_marginStart="16dp"
    android:layout_marginTop="8dp"
    android:layout_marginEnd="16dp"
    android:hint="Enter your Name"
    android:padding="10dp" />
    <!--EditText to take the data from the user and save the data in SharedPreferences-->  <EditText
    android:id="@+id/edit2"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_below="@+id/edit1"
    android:layout_marginStart="16dp"
    android:layout_marginTop="8dp"
    android:layout_marginEnd="16dp"
    android:hint="Enter your Age"
    android:inputType="number"
    android:padding="10dp" />
</RelativeLayout>

KT FILE
package com.example.myapplication

import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.widget.EditText

class MainActivity : AppCompatActivity() {
    private lateinit var name: EditText
    private lateinit var age: EditText
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        name = findViewById(R.id.edit1)
        age = findViewById(R.id.edit2)
    }
    // Fetch the stored data in onResume() Because this is what will be called when the app opens again
    override fun onResume() {
        super.onResume()
        // Fetching the stored data from the SharedPreference
        val sh = getSharedPreferences("MySharedPref", MODE_PRIVATE)
        val s1 = sh.getString("name", "")
        val a = sh.getInt("age", 0)
        // Setting the fetched data in the EditTexts
        name.setText(s1)
        age.setText(a.toString())
    }
    // Store the data in the SharedPreference in the onPause() method
    // When the user closes the application onPause() will be called and data will be stored
    override fun onPause() {
        super.onPause()
        // Creating a shared pref object with a file name "MySharedPref" in private mode
        val sharedPreferences = getSharedPreferences("MySharedPref", MODE_PRIVATE)
        val myEdit = sharedPreferences.edit()
        // write all the data entered by the user in SharedPreference and apply
        myEdit.putString("name", name.text.toString())
        myEdit.putInt("age", age.text.toString().toInt())
        myEdit.apply()
    }
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------
7) ANIMATIONS
RES->NEW->AND RES DIRECTORY->ANIM

ANIM FOLDER->NEW ->ANIMATION RES FILE

MAIN.XML

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"

xmlns:tools="http://schemas.android.com/tools"

android:layout_width="match_parent"

android:layout_height="match_parent"

tools:context=".MainActivity">

<TextView

android:id="@+id/textView"

android:layout_width="match_parent"

android:layout_height="match_parent"

android:layout_above="@+id/linearLayout"

android:gravity="center"

android:text="Mobile Application Development"

android:textSize="32sp"

android:textColor="@color/teal_200"

android:textStyle="bold" />

<LinearLayout

android:id="@+id/linearLayout"

android:layout_width="match_parent"

android:layout_height="wrap_content"

android:layout_alignParentBottom="true"

android:orientation="vertical">

<LinearLayout

android:layout_width="match_parent"

android:layout_height="wrap_content"

android:orientation="horizontal"

android:weightSum="2">

<Button

android:id="@+id/fade_in"

android:layout_width="0dp"

android:layout_height="match_parent"

android:layout_weight="1"

android:text="Fade In"

android:textAllCaps="false" />

<Button

android:id="@+id/fade_out"

android:layout_width="0dp"

android:layout_height="match_parent"

android:layout_weight="1"

android:text="Fade Out"

android:textAllCaps="false" />

</LinearLayout>

<LinearLayout

android:layout_width="match_parent"

android:layout_height="wrap_content"

android:orientation="horizontal"

android:weightSum="2">

<Button

android:id="@+id/zoom_in"

android:layout_width="0dp"

android:layout_height="match_parent"

android:layout_weight="1"

android:text="Zoom In"

android:textAllCaps="false" />

<Button

android:id="@+id/zoom_out"

android:layout_width="0dp"

android:layout_height="match_parent"

android:layout_weight="1"

android:text="Zoom Out"

android:textAllCaps="false" />

</LinearLayout>

<LinearLayout

android:layout_width="match_parent"

android:layout_height="wrap_content"

android:orientation="horizontal"

android:weightSum="2">

<Button

android:id="@+id/slide_down"

android:layout_width="0dp"

android:layout_height="match_parent"

android:layout_weight="1"

android:text="Slide Down"

android:textAllCaps="false" />

<Button

android:id="@+id/slide_up"

android:layout_width="0dp"

android:layout_height="match_parent"

android:layout_weight="1"

android:text="Slide Up"

android:textAllCaps="false" />

</LinearLayout>

<LinearLayout

android:layout_width="match_parent"

android:layout_height="wrap_content"

android:orientation="horizontal"

android:weightSum="2">

<Button

android:id="@+id/bounce"

android:layout_width="0dp"

android:layout_height="match_parent"

android:layout_weight="1"

android:text="Bounce"

android:textAllCaps="false" />

<Button

android:id="@+id/rotate"

android:layout_width="0dp"

android:layout_height="match_parent"

android:layout_weight="1"

android:text="Rotate"

android:textAllCaps="false" />

</LinearLayout>

</LinearLayout>

</RelativeLayout>


Fade_in

<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android"
android:interpolator="@android:anim/linear_interpolator">
<alpha
android:duration="1000"
android:fromAlpha="0.1"
android:toAlpha="1.0" />
</set>

Fade_out

<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android"
android:interpolator="@android:anim/linear_interpolator">
<alpha
android:duration="2000"
android:fillAfter="true"
android:fromAlpha="1.0"
android:toAlpha="0.1" />
</set>

Zoom_in

<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android"
android:fillAfter="true">
<scale xmlns:android="http://schemas.android.com/apk/res/android"
android:duration="1000"
android:fromXScale="1"
android:fromYScale="1"
android:pivotX="50%"
android:pivotY="50%"
android:toXScale="1.5"
android:toYScale="1.5">
</scale>
</set>

Zoom_out

<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android"
android:fillAfter="true" >
<scale
xmlns:android="http://schemas.android.com/apk/res/android"
android:duration="1000"
android:fromXScale="1.0"
android:fromYScale="1.0"
android:pivotX="50%"
android:pivotY="50%"
android:toXScale="0.5"
android:toYScale="0.5" >
</scale>
</set>

Slide_up

<set xmlns:android="http://schemas.android.com/apk/res/android">
<translate
android:duration="1000"
android:fromYDelta="0"
android:toYDelta="-100%" />
</set>

Slide_down

<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android">
<translate
android:duration="1000"
android:fromYDelta="-100%"
android:toYDelta="0" />
</set>

Bounce

<?xml version="1.0" encoding="utf-8"?>
<set
xmlns:android="http://schemas.android.com/apk/res/android"
android:interpolator="@android:anim/linear_interpolator"
android:fillAfter="true">
<translate
android:fromYDelta="100%"
android:toYDelta="-20%"
android:duration="300" />
<translate
android:startOffset="500"
android:fromYDelta="-20%"
android:toYDelta="10%"
android:duration="150" />
<translate
android:startOffset="1000"
android:fromYDelta="10%"
android:toYDelta="0"
android:duration="100" />
</set>

MAIN.KT

package com.example.myapplication

import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.view.animation.AnimationUtils
import android.widget.Button
import android.widget.TextView

class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {

        super.onCreate(savedInstanceState)

        setContentView(R.layout.activity_main)

        val image=findViewById<TextView>(R.id.textView)

        findViewById<Button>(R.id.fade_in).setOnClickListener {

            val animationFadeIn = AnimationUtils.loadAnimation(this, R.anim.fade_in)

            image.startAnimation(animationFadeIn)

        }

        findViewById<Button>(R.id.fade_out).setOnClickListener {

            val animationFadeOut = AnimationUtils.loadAnimation(this, R.anim.fade_out)

            image.startAnimation(animationFadeOut)

        }

        findViewById<Button>(R.id.zoom_in).setOnClickListener {

            val animationZoomIn = AnimationUtils.loadAnimation(this, R.anim.zoom_in)

            image.startAnimation(animationZoomIn)

        }

        findViewById<Button>(R.id.zoom_out).setOnClickListener {

            val animationZoomOut = AnimationUtils.loadAnimation(this,
                R.anim.zoom_out)

            image.startAnimation(animationZoomOut)

        }

        findViewById<Button>(R.id.slide_up).setOnClickListener {

            val animationZoomIn = AnimationUtils.loadAnimation(this,
                R.anim.slide_up)

            image.startAnimation(animationZoomIn)

        }

        findViewById<Button>(R.id.slide_down).setOnClickListener {

            val animationZoomIn = AnimationUtils.loadAnimation(this,
                R.anim.slide_down)

            image.startAnimation(animationZoomIn)

        }

        val bounceAnimation = AnimationUtils.loadAnimation(this,
            R.anim.bounce)

        findViewById<Button>(R.id.bounce).setOnClickListener {

            image.startAnimation(bounceAnimation)

        }

        findViewById<Button>(R.id.rotate).setOnClickListener {

            image.animate().apply {

                duration=1000

                rotationXBy(360f)
            }.start()

        }

    }

}
